# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo apt update
          sudo apt install -y build-essential flex bison libssl-dev libelf-dev git zip
          git clone --depth=1 https://github.com/microsoft/WSL2-Linux-Kernel.git
          cd WSL2-Linux-Kernel/tools/perf
          make
          ls -al
          sudo chmod +x perf
          ./perf test
      - name: compress Release
        run : |
          cd WSL2-Linux-Kernel/tools/perf && zip -r wsl2-for-perf-release.zip perf*
      - name : upload binary
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: wsl2-for-perf
          path: ./WSL2-Linux-Kernel/tools/perf/wsl2-for-perf-release.zip
          
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}-ubuntu
#           release_name: ${{ github.ref }}-ubuntu
#           draft: false
#           prerelease: false
          
#       - name: list zip file
#         run : |
#           pwd && ls -al && cd WSL2-Linux-Kernel/tools/perf && pwd && ls -al
#           echo ${{ github.ref }}

#       - name: Upload Release Asset
#         id: upload-release-asset 
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#           asset_path: ./WSL2-Linux-Kernel/tools/perf/wsl2-for-perf-release.zip
#           asset_name: wsl2-for-perf-release.zip
#           asset_content_type: application/zip
